{"version":3,"names":["RowItem","props","propsRef","useSharedValue","value","useDraggableFlatListContext","activeKey","activeKeyRef","useRef","current","useRefs","keyToIndexRef","drag","useStableCallback","itemKey","debug","console","log","renderItem","item","extraData","getIndex","get","typedMemo","Inner","rest","MemoizedInner"],"sources":["RowItem.tsx"],"sourcesContent":["import React, { useRef } from \"react\";\nimport { useDraggableFlatListContext } from \"../context/draggableFlatListContext\";\nimport { useRefs } from \"../context/refContext\";\nimport { useStableCallback } from \"../hooks/useStableCallback\";\nimport { RenderItem } from \"../types\";\nimport { typedMemo } from \"../utils\";\nimport { useSharedValue } from \"react-native-reanimated\";\n\ntype Props<T> = {\n  extraData?: any;\n  drag: (itemKey: string) => void;\n  item: T;\n  renderItem: RenderItem<T>;\n  itemKey: string;\n  debug?: boolean;\n};\n\nfunction RowItem<T>(props: Props<T>) {\n  const propsRef = useSharedValue(props);\n  propsRef.value = props;\n\n  const { activeKey } = useDraggableFlatListContext();\n  const activeKeyRef = useRef(activeKey);\n  activeKeyRef.current = activeKey;\n  const { keyToIndexRef } = useRefs();\n\n  const drag = useStableCallback(() => {\n    const { drag, itemKey, debug } = propsRef.value;\n    if (activeKeyRef.current) {\n      // already dragging an item, noop\n      if (debug)\n        console.log(\n          \"## attempt to drag item while another item is already active, noop\"\n        );\n    }\n    drag(itemKey);\n  });\n\n  const { renderItem, item, itemKey, extraData } = props;\n\n  const getIndex = useStableCallback(() => {\n    return keyToIndexRef.value.get(itemKey);\n  });\n\n  return (\n    <MemoizedInner\n      isActive={activeKey === itemKey}\n      drag={drag}\n      renderItem={renderItem}\n      item={item}\n      getIndex={getIndex}\n      extraData={extraData}\n    />\n  );\n}\n\nexport default typedMemo(RowItem);\n\ntype InnerProps<T> = {\n  isActive: boolean;\n  item: T;\n  getIndex: () => number | undefined;\n  drag: () => void;\n  renderItem: RenderItem<T>;\n  extraData?: any;\n};\n\nfunction Inner<T>({ renderItem, extraData, ...rest }: InnerProps<T>) {\n  return renderItem({ ...rest }) as JSX.Element;\n}\n\nconst MemoizedInner = typedMemo(Inner);\n"],"mappings":"mRAAA,qDACA,6EACA,iDACA,6DAEA,+BACA,8D,+lCAWA,QAASA,QAAT,CAAoBC,KAApB,CAAqC,CACnC,GAAMC,SAAQ,CAAG,GAAAC,qCAAA,EAAeF,KAAf,CAAjB,CACAC,QAAQ,CAACE,KAAT,CAAiBH,KAAjB,CAFmC,0BAIb,GAAAI,qDAAA,GAJa,CAI3BC,SAJ2B,uBAI3BA,SAJ2B,CAKnC,GAAMC,aAAY,CAAG,GAAAC,aAAA,EAAOF,SAAP,CAArB,CACAC,YAAY,CAACE,OAAb,CAAuBH,SAAvB,CANmC,aAOT,GAAAI,mBAAA,GAPS,CAO3BC,aAP2B,UAO3BA,aAP2B,CASnC,GAAMC,KAAI,CAAG,GAAAC,oCAAA,EAAkB,UAAM,qBACFX,QAAQ,CAACE,KADP,CAC3BQ,IAD2B,iBAC3BA,IAD2B,CACrBE,OADqB,iBACrBA,OADqB,CACZC,KADY,iBACZA,KADY,CAEnC,GAAIR,YAAY,CAACE,OAAjB,CAA0B,CAExB,GAAIM,KAAJ,CACEC,OAAO,CAACC,GAAR,CACE,oEADF,EAGH,CACDL,IAAI,CAACE,OAAD,CAAJ,CACD,CAVY,CAAb,CATmC,GAqB3BI,WArB2B,CAqBcjB,KArBd,CAqB3BiB,UArB2B,CAqBfC,IArBe,CAqBclB,KArBd,CAqBfkB,IArBe,CAqBTL,OArBS,CAqBcb,KArBd,CAqBTa,OArBS,CAqBAM,SArBA,CAqBcnB,KArBd,CAqBAmB,SArBA,CAuBnC,GAAMC,SAAQ,CAAG,GAAAR,oCAAA,EAAkB,UAAM,CACvC,MAAOF,cAAa,CAACP,KAAd,CAAoBkB,GAApB,CAAwBR,OAAxB,CAAP,CACD,CAFgB,CAAjB,CAIA,MACE,8BAAC,aAAD,EACE,QAAQ,CAAER,SAAS,GAAKQ,OAD1B,CAEE,IAAI,CAAEF,IAFR,CAGE,UAAU,CAAEM,UAHd,CAIE,IAAI,CAAEC,IAJR,CAKE,QAAQ,CAAEE,QALZ,CAME,SAAS,CAAED,SANb,4EADF,CAUD,C,aAEc,GAAAG,gBAAA,EAAUvB,OAAV,C,0BAWf,QAASwB,MAAT,MAAqE,IAAjDN,WAAiD,MAAjDA,UAAiD,CAArCE,SAAqC,MAArCA,SAAqC,CAAvBK,IAAuB,wEACnE,MAAOP,WAAU,kBAAMO,IAAN,EAAjB,CACD,CAED,GAAMC,cAAa,CAAG,GAAAH,gBAAA,EAAUC,KAAV,CAAtB"}