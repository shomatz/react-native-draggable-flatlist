{"version":3,"names":["React","useContext","useMemo","useRef","useSharedValue","DEFAULT_PROPS","useProps","RefContext","createContext","undefined","RefProvider","children","flatListRef","value","useSetupRefs","useRefs","Error","flatListRefProp","props","animationConfig","propsRef","current","animConfig","animationConfigRef","cellDataRef","Map","keyToIndexRef","containerRef","flatlistRefInternal","flatlistRef","scrollViewRef","refs"],"sources":["refContext.tsx"],"sourcesContent":["import React, { useContext } from \"react\";\nimport { useMemo, useRef } from \"react\";\nimport { FlatList } from \"react-native-gesture-handler\";\nimport Animated, { SharedValue, useSharedValue, WithSpringConfig } from \"react-native-reanimated\";\nimport { DEFAULT_PROPS } from \"../constants\";\nimport { useProps } from \"./propsContext\";\nimport { CellData, DraggableFlatListProps } from \"../types\";\n\ntype RefContextValue<T> = {\n  propsRef: React.MutableRefObject<DraggableFlatListProps<T>>;\n  animationConfigRef: SharedValue<WithSpringConfig>;\n  cellDataRef: React.MutableRefObject<Map<string, CellData>>;\n  keyToIndexRef: React.MutableRefObject<Map<string, number>>;\n  containerRef: React.RefObject<Animated.View>;\n  flatlistRef: React.RefObject<FlatList<T>> | React.ForwardedRef<FlatList<T>>;\n  scrollViewRef: React.RefObject<Animated.ScrollView>;\n};\nconst RefContext = React.createContext<RefContextValue<any> | undefined>(\n  undefined\n);\n\nexport default function RefProvider<T>({\n  children,\n  flatListRef,\n}: {\n  children: React.ReactNode;\n  flatListRef?: React.ForwardedRef<FlatList<T>> | null;\n}) {\n  const value = useSetupRefs<T>({ flatListRef });\n  return <RefContext.Provider value={value}>{children}</RefContext.Provider>;\n}\n\nexport function useRefs<T>() {\n  const value = useContext(RefContext);\n  if (!value) {\n    throw new Error(\n      \"useRefs must be called from within a RefContext.Provider!\"\n    );\n  }\n  return value as RefContextValue<T>;\n}\n\nfunction useSetupRefs<T>({\n  flatListRef: flatListRefProp,\n}: {\n  flatListRef?: React.ForwardedRef<FlatList<T>> | null;\n}) {\n  const props = useProps<T>();\n  const { animationConfig = DEFAULT_PROPS.animationConfig } = props;\n\n  const propsRef = useRef(props);\n  propsRef.current = props;\n  const animConfig = {\n    ...DEFAULT_PROPS.animationConfig,\n    ...animationConfig,\n  } as WithSpringConfig;\n  const animationConfigRef = useSharedValue(animConfig);\n  animationConfigRef.value = animConfig;\n\n  const cellDataRef = useRef(new Map<string, CellData>());\n  const keyToIndexRef = useRef(new Map<string, number>());\n  const containerRef = useRef<Animated.View>(null);\n  const flatlistRefInternal = useRef<FlatList<T>>(null);\n  const flatlistRef = flatListRefProp || flatlistRefInternal;\n  const scrollViewRef = useRef<Animated.ScrollView>(null);\n\n  // useEffect(() => {\n  //   // This is a workaround for the fact that RN does not respect refs passed in\n  //   // to renderScrollViewComponent underlying ScrollView (currently not used but\n  //   // may need to add if we want to use reanimated scrollTo in the future)\n  //   //@ts-ignore\n  //   const scrollRef = flatlistRef.current?.getNativeScrollRef();\n  //   if (!scrollViewRef.current) {\n  //     //@ts-ignore\n  //     scrollViewRef(scrollRef);\n  //   }\n  // }, []);\n\n  const refs = useMemo(\n    () => ({\n      animationConfigRef,\n      cellDataRef,\n      containerRef,\n      flatlistRef,\n      keyToIndexRef,\n      propsRef,\n      scrollViewRef,\n    }),\n    []\n  );\n\n  return refs;\n}\n"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,OAAT,EAAkBC,MAAlB,QAAgC,OAAhC;AAEA,SAAgCC,cAAhC,QAAwE,yBAAxE;AACA,SAASC,aAAT,QAA8B,cAA9B;AACA,SAASC,QAAT,QAAyB,gBAAzB;AAYA,MAAMC,UAAU,gBAAGP,KAAK,CAACQ,aAAN,CACjBC,SADiB,CAAnB;AAIA,eAAe,SAASC,WAAT,OAMZ;EAAA,IANoC;IACrCC,QADqC;IAErCC;EAFqC,CAMpC;EACD,MAAMC,KAAK,GAAGC,YAAY,CAAI;IAAEF;EAAF,CAAJ,CAA1B;EACA,oBAAO,oBAAC,UAAD,CAAY,QAAZ;IAAqB,KAAK,EAAEC;EAA5B,GAAoCF,QAApC,CAAP;AACD;AAED,OAAO,SAASI,OAAT,GAAsB;EAC3B,MAAMF,KAAK,GAAGZ,UAAU,CAACM,UAAD,CAAxB;;EACA,IAAI,CAACM,KAAL,EAAY;IACV,MAAM,IAAIG,KAAJ,CACJ,2DADI,CAAN;EAGD;;EACD,OAAOH,KAAP;AACD;;AAED,SAASC,YAAT,QAIG;EAAA,IAJsB;IACvBF,WAAW,EAAEK;EADU,CAItB;EACD,MAAMC,KAAK,GAAGZ,QAAQ,EAAtB;EACA,MAAM;IAAEa,eAAe,GAAGd,aAAa,CAACc;EAAlC,IAAsDD,KAA5D;EAEA,MAAME,QAAQ,GAAGjB,MAAM,CAACe,KAAD,CAAvB;EACAE,QAAQ,CAACC,OAAT,GAAmBH,KAAnB;EACA,MAAMI,UAAU,GAAG,EACjB,GAAGjB,aAAa,CAACc,eADA;IAEjB,GAAGA;EAFc,CAAnB;EAIA,MAAMI,kBAAkB,GAAGnB,cAAc,CAACkB,UAAD,CAAzC;EACAC,kBAAkB,CAACV,KAAnB,GAA2BS,UAA3B;EAEA,MAAME,WAAW,GAAGrB,MAAM,CAAC,IAAIsB,GAAJ,EAAD,CAA1B;EACA,MAAMC,aAAa,GAAGvB,MAAM,CAAC,IAAIsB,GAAJ,EAAD,CAA5B;EACA,MAAME,YAAY,GAAGxB,MAAM,CAAgB,IAAhB,CAA3B;EACA,MAAMyB,mBAAmB,GAAGzB,MAAM,CAAc,IAAd,CAAlC;EACA,MAAM0B,WAAW,GAAGZ,eAAe,IAAIW,mBAAvC;EACA,MAAME,aAAa,GAAG3B,MAAM,CAAsB,IAAtB,CAA5B,CAlBC,CAoBD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,MAAM4B,IAAI,GAAG7B,OAAO,CAClB,OAAO;IACLqB,kBADK;IAELC,WAFK;IAGLG,YAHK;IAILE,WAJK;IAKLH,aALK;IAMLN,QANK;IAOLU;EAPK,CAAP,CADkB,EAUlB,EAVkB,CAApB;EAaA,OAAOC,IAAP;AACD"}